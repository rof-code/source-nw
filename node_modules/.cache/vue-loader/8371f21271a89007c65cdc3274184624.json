{"remainingRequest":"C:\\Users\\rjj20\\Desktop\\renovabe\\renovabe-vue\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\rjj20\\Desktop\\renovabe\\renovabe-vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\rjj20\\Desktop\\renovabe\\renovabe-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\rjj20\\Desktop\\renovabe\\renovabe-vue\\src\\components\\gerais\\famososRecomendam.vue?vue&type=template&id=4b3e6dea&","dependencies":[{"path":"C:\\Users\\rjj20\\Desktop\\renovabe\\renovabe-vue\\src\\components\\gerais\\famososRecomendam.vue","mtime":1626286261496},{"path":"C:\\Users\\rjj20\\Desktop\\renovabe\\renovabe-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1625689018811},{"path":"C:\\Users\\rjj20\\Desktop\\renovabe\\renovabe-vue\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1625689037702},{"path":"C:\\Users\\rjj20\\Desktop\\renovabe\\renovabe-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1625689018811},{"path":"C:\\Users\\rjj20\\Desktop\\renovabe\\renovabe-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1625689037694}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}