{"remainingRequest":"C:\\Users\\rjj20\\Desktop\\renovabe\\renovabe-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\rjj20\\Desktop\\renovabe\\renovabe-vue\\src\\components\\gerais\\depoimentos.vue?vue&type=template&id=657d7b23&","dependencies":[{"path":"C:\\Users\\rjj20\\Desktop\\renovabe\\renovabe-vue\\src\\components\\gerais\\depoimentos.vue","mtime":1626800034595},{"path":"C:\\Users\\rjj20\\Desktop\\renovabe\\renovabe-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1625689018811},{"path":"C:\\Users\\rjj20\\Desktop\\renovabe\\renovabe-vue\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1625689037702},{"path":"C:\\Users\\rjj20\\Desktop\\renovabe\\renovabe-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1625689018811},{"path":"C:\\Users\\rjj20\\Desktop\\renovabe\\renovabe-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1625689037694}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgICA8IS0tID09PT09PT09PT09PURFUE9JTUVOVE9TPT09PT09PT09PT09PSAgLS0+CjxzZWN0aW9uIHN0eWxlPSJtYXJnaW4tYm90dG9tOiA1MHB4OyI+CiAgICA8ZGl2IGNsYXNzPSJjb250YWluZXIiIHN0eWxlPSJwYWRkaW5nOjAgMjBweCAwIDIwcHg7Ij4KICAgICAgICA8ZGl2IGNsYXNzPSJyb3ciPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtc20tMTIiIHN0eWxlPSJ0ZXh0LWFsaWduOiBjZW50ZXI7Ij4KICAgICAgICAgICAgIDxiciBjbGFzcz0ibW9iIj4KICAgICAgICAgICAgIDxoMT5EZXBvaW1lbnRvcyA8YnIgY2xhc3M9Im1vYiI+ZGUgY2xpZW50ZXM8L2gxPgogICAgICAgICAgICAgPHAgc3R5bGU9IiBmb250LXNpemU6MTVweDtjb2xvcjogIzg5ODk4OTsiPgogICAgICAgICAgICAgICAgVmVqYSBvIHF1ZSBub3Nzb3MgY2xpZW50ZXMgPGJyIGNsYXNzPSJtb2IiPmRpemVtIHNvYnJlIG8gUmVub3ZhIEJlCiAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgPGJyIGNsYXNzPSJtb2IiPgogICAgICAgIDwvZGl2PgogICAgPC9kaXY+CgogICAgPGJyPgoKICAgIDxkaXYgY2xhc3M9InJvdyI+CiAgICAgICAgPGRpdiBjbGFzcz0iY29sLXNtLTEyIj4KCiAgICAgICAgICAgIDx0YWJsZSB3aWR0aD0iMTAwJSIgYm9yZGVyPSIwIj4KICAgICAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgICAgICA8dGggd2lkdGg9IjElIiByb3dzcGFuPSIyIiBzY29wZT0icm93Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBhbGlnbj0ibGVmdCIgc3R5bGU9InBhZGRpbmctcmlnaHQ6MjBweDsgbWFyZ2luLXRvcDotMTZweDsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9IkAvYXNzZXRzL3Jlbm92YS9pY29uLXVzZXIucG5nIj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPC90aD4KICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgICAgPHRkPgogICAgICAgICAgICAgICAgICAgICAgICA8cD48c3BhbiBzdHlsZT0iZm9udC1zaXplOjE1cHg7IGZvbnQtd2VpZ2h0OmJvbGQ7IGNvbG9yOiM4MjgyODI7Ij5KYWNpYXJhIENhcmRvc28gPGZvbnQgY2xhc3M9InN1bWlyIiBzdHlsZT0iY29sb3I6ICM3MGQzOWE7IGZvbnQtc2l6ZTogMTFweDsgZGlzcGxheTogbGluZS1ibG9jayAhaW1wb3J0YW50OyI+Jm5ic3A7Jm5ic3A7Jm5ic3A7Jm5ic3A7Jm5ic3A7Jm5ic3A7IENvbXByYWRvciBWZXJpZmljYWRvPC9mb250Pjwvc3Bhbj48YnIgY2xhc3M9Im1vYiI+PHNwYW4gc3R5bGU9ImZsb2F0OnJpZ2h0OyBjb2xvcjojOTk5OyBmb250LXNpemU6MTJweDsgZm9udC13ZWlnaHQ6Ym9sZDsiIGNsYXNzPSJkYXRhQ29tZW50Ij4wNy8wMi8yMDIwPC9zcGFuPjwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgPHAgc3R5bGU9Im1hcmdpbi10b3A6IC0xMHB4OyBjb2xvcjojODI4MjgyOyBmb250LXNpemU6IDEwcHg7Ij48aW1nIHN0eWxlPSJtYXJnaW4tdG9wOjIwcHg7IiBzcmM9IkAvYXNzZXRzL3Jlbm92YS9pbWctYnIucG5nIj48L3A+CiAgICAgICAgICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW4tdG9wOiAtMTBweDsgbWFyZ2luLWJvdHRvbTogMjBweDsiPjxpbWcgc3R5bGU9Im1hcmdpbi10b3A6MjBweDsiIHNyYz0iQC9hc3NldHMvcmVub3ZhLzUtc3RhcnMucG5nIj48L3A+CiAgICAgICAgICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgIDwvdGFibGU+CgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9ImNvbC1zbS0xMiI+CiAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW4tdG9wOi0xNXB4OyBjb2xvcjojODI4MjgyOyBmb250LXNpemU6MTVweDsiPjxzdHJvbmcgc3R5bGU9ImZvbnQtd2VpZ2h0OjcwMDsiPk1pbmhhIHBlbGUgZXN0w6EgbWFpcyB2acOnb3NhPC9zdHJvbmc+PC9wPgogICAgICAgICAgICA8cCBzdHlsZT0iY29sb3I6IzgyODI4MjsgZm9udC1zaXplOjE0cHg7Ij5QZXNzb2FsLCBtZXUgcmVsYXRvIMOpIHF1ZSBldSBhbWVpIG8gcHJvZHV0byBkZSB2b2PDqnMuIFRvZGFzIGFzIGxpbmhhcyBkZSBleHByZXNzw6NvIGRhIG1pbmhhIHRlc3RhIGUgb2xob3Mgc3VtaXJhbS4gU2ltcGxlbWVudGUgYWRvcmVpLjwvcD4KICAgICAgICA8L2Rpdj4KICAgIDwvZGl2PgoKICAgIDxiciBjbGFzcz0iZGVzayI+CiAgICA8YnIgY2xhc3M9Im1vYiI+CgogICAgPGRpdiBzdHlsZT0iYm9yZGVyOiAwLjJweCBzb2xpZCAjZTJlMmUyOyB3aWR0aDoxMDAlOyBoZWlnaHQ6MXB4OyBtYXJnaW4tYm90dG9tOjZweDsiPjwvZGl2PgoKCiAgICA8YnIgY2xhc3M9ImRlc2siPgogICAgPGJyIGNsYXNzPSJtb2IiPgoKICAgIDxkaXYgY2xhc3M9InJvdyI+CiAgICAgICAgPGRpdiBjbGFzcz0iY29sLXNtLTEyIj4KICAgICAgICAgICAgPHRhYmxlIHdpZHRoPSIxMDAlIiBib3JkZXI9IjAiPgogICAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgICAgIDx0aCB3aWR0aD0iMSUiIHJvd3NwYW49IjIiIHNjb3BlPSJyb3ciPgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGFsaWduPSJsZWZ0IiBzdHlsZT0icGFkZGluZy1yaWdodDoyMHB4OyBtYXJnaW4tdG9wOi0xNnB4OyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz0iQC9hc3NldHMvcmVub3ZhL2ljb24tdXNlci5wbmciPgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8L3RoPgogICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgICAgICA8dGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDxwPjxzcGFuIHN0eWxlPSJmb250LXNpemU6MTVweDsgZm9udC13ZWlnaHQ6Ym9sZDsgY29sb3I6IzgyODI4MjsiPk1haWFyYSBQYWl2YSA8Zm9udCBjbGFzcz0ic3VtaXIiIHN0eWxlPSJjb2xvcjogIzcwZDM5YTsgZm9udC1zaXplOiAxMXB4OyI+Jm5ic3A7Jm5ic3A7Jm5ic3A7Jm5ic3A7Jm5ic3A7Jm5ic3A7IENvbXByYWRvciBWZXJpZmljYWRvPC9mb250Pjwvc3Bhbj48YnIgY2xhc3M9Im1vYiI+PHNwYW4gc3R5bGU9ImZsb2F0OnJpZ2h0OyBjb2xvcjojOTk5OyBmb250LXNpemU6MTJweDsgZm9udC13ZWlnaHQ6Ym9sZDsiIGNsYXNzPSJkYXRhQ29tZW50Ij4xNi8wMi8yMDIwPC9zcGFuPjwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgPHAgc3R5bGU9Im1hcmdpbi10b3A6IC0xMHB4OyBjb2xvcjojODI4MjgyOyBmb250LXNpemU6IDEwcHg7Ij48aW1nIHN0eWxlPSJtYXJnaW4tdG9wOjIwcHg7IiBzcmM9IkAvYXNzZXRzL3Jlbm92YS9pbWctYnIucG5nIj48L3A+CiAgICAgICAgICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW4tdG9wOiAtMTBweDsgbWFyZ2luLWJvdHRvbTogMjBweDsiPjxpbWcgc3R5bGU9Im1hcmdpbi10b3A6MjBweDsiIHNyYz0iQC9hc3NldHMvcmVub3ZhLzUtc3RhcnMucG5nIj48L3A+CiAgICAgICAgICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgIDwvdGFibGU+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0iY29sLXNtLTEyIj4KICAgICAgICAgICAgPHAgc3R5bGU9Im1hcmdpbi10b3A6LTE1cHg7IGNvbG9yOiM4MjgyODI7IGZvbnQtc2l6ZToxNXB4OyI+PHN0cm9uZyBzdHlsZT0iZm9udC13ZWlnaHQ6NzAwOyI+MjAgZGlhcyB1c2FuZG8gbyBwcm9kdXRvLi4uPC9zdHJvbmc+PC9wPgogICAgICAgICAgICA8cCBzdHlsZT0iY29sb3I6IzgyODI4MjsgZm9udC1zaXplOjE0cHg7Ij5TZW1wcmUgZnVpIGNvbnN1bWlkb3JhIGRlIGNvbMOhZ2Vub3MsIG1hcyBzZW1wcmUgZW0gY8OhcHN1bGFzIHBvaXMgYWNoYXZhIG1haXMgcHLDoXRpY28uIEF0ZWUgcXVlIHZpICBhIEp1anUgc2FsaW1lbmkgZmFsYW5kbyBzb2JyZSBvIHByb2R1dG8gZSByZXNvbHZpIGNvbXByYXIuCiAgICAgICAgICAgIEdlbnRlLCB2b2NlcyBlc3TDo28gZGUgcGFyYWJlbnMuIFByb2R1dG8gY29tIGdvc3RvIG1hcmF2aWxob3NvLCByZXN1bHRhZG8gZW0gcG91cXVpc3NpbW8gdGVtcG8gZGUgdXNvIGUgZm9yYSBvIHByZcOnby4gT2JyaWdhZG8uPC9wPgogICAgICAgIDwvZGl2PgogICAgPC9kaXY+CgoKCgogICAgPGJyIGNsYXNzPSJkZXNrIj4KICAgIDxiciBjbGFzcz0ibW9iIj4KCiAgICA8ZGl2IHN0eWxlPSJib3JkZXI6IDAuMnB4IHNvbGlkICNlMmUyZTI7IHdpZHRoOjEwMCU7IGhlaWdodDoxcHg7IG1hcmdpbi1ib3R0b206NnB4OyI+PC9kaXY+CgoKICAgIDxiciBjbGFzcz0iZGVzayI+CiAgICA8YnIgY2xhc3M9Im1vYiI+CgoKICAgIDxkaXYgY2xhc3M9InJvdyI+CiAgICAgICAgPGRpdiBjbGFzcz0iY29sLXNtLTEyIj4KICAgICAgICAgICAgPHRhYmxlIHdpZHRoPSIxMDAlIiBib3JkZXI9IjAiPgogICAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgICAgIDx0aCB3aWR0aD0iMSUiIHJvd3NwYW49IjIiIHNjb3BlPSJyb3ciPgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGFsaWduPSJsZWZ0IiBzdHlsZT0icGFkZGluZy1yaWdodDoyMHB4OyBtYXJnaW4tdG9wOi0xNnB4OyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz0iQC9hc3NldHMvcmVub3ZhL2ljb24tdXNlci5wbmciPgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8L3RoPgogICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgICAgICA8dGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDxwPjxzcGFuIHN0eWxlPSJmb250LXNpemU6MTVweDsgZm9udC13ZWlnaHQ6Ym9sZDsgY29sb3I6IzgyODI4MjsiPkVkaWxlbmUgQy4gPGZvbnQgY2xhc3M9InN1bWlyIiBzdHlsZT0iY29sb3I6ICM3MGQzOWE7IGZvbnQtc2l6ZTogMTFweDsiPiZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOyBDb21wcmFkb3IgVmVyaWZpY2FkbzwvZm9udD48L3NwYW4+IDxiciBjbGFzcz0ibW9iIj48c3BhbiBzdHlsZT0iZmxvYXQ6cmlnaHQ7IGNvbG9yOiM5OTk7IGZvbnQtc2l6ZToxMnB4OyBmb250LXdlaWdodDpib2xkOyIgY2xhc3M9ImRhdGFDb21lbnQiPjI0LzAyLzIwMjA8L3NwYW4+PC9wPgogICAgICAgICAgICAgICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luLXRvcDogLTEwcHg7IGNvbG9yOiM4MjgyODI7IGZvbnQtc2l6ZTogMTBweDsiPjxpbWcgc3R5bGU9Im1hcmdpbi10b3A6MjBweDsiIHNyYz0iQC9hc3NldHMvcmVub3ZhL2ltZy1ici5wbmciPjwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgPHAgc3R5bGU9Im1hcmdpbi10b3A6IC0xMHB4OyBtYXJnaW4tYm90dG9tOiAyMHB4OyI+PGltZyBzdHlsZT0ibWFyZ2luLXRvcDoyMHB4OyIgc3JjPSJAL2Fzc2V0cy9yZW5vdmEvNS1zdGFycy5wbmciPjwvcD4KICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgPC90YWJsZT4KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtc20tMTIiPgogICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luLXRvcDotMTVweDsgY29sb3I6IzgyODI4MjsgZm9udC1zaXplOjE1cHg7Ij48c3Ryb25nIHN0eWxlPSJmb250LXdlaWdodDo3MDA7Ij5PIHByb2R1dG8gZnVuY2lvbmEgbWVzbW88L3N0cm9uZz48L3A+CiAgICAgICAgICAgIDxwIHN0eWxlPSJjb2xvcjojODI4MjgyOyBmb250LXNpemU6MTRweDsiPkNvbXByZWkgYWNoYW5kbyBxdWUgbsOjbyBpYSBmdW5jaW9uYXIsIG1hcyBtZSBzdXJwcmVlbmRpLiBkZW1vcm91IHVtIHBvdWNvLCBtYXMgc2VudGkgZGlmZXJlbsOnYSBsb2dvIG5vcyBwcmltZWlyb3MgMjAgZGlhcyBkZSB1c28uIE11dXV1dXV1aXRvIGJvbSEhPC9wPgogICAgICAgIDwvZGl2PgogICAgPC9kaXY+CgoKICAgIDxiciBjbGFzcz0iZGVzayI+CiAgICA8YnIgY2xhc3M9Im1vYiI+CgogICAgPGRpdiBzdHlsZT0iYm9yZGVyOiAwLjJweCBzb2xpZCAjZTJlMmUyOyB3aWR0aDoxMDAlOyBoZWlnaHQ6MXB4OyBtYXJnaW4tYm90dG9tOjZweDsiPjwvZGl2PgoKCiAgICA8YnIgY2xhc3M9ImRlc2siPgogICAgPGJyIGNsYXNzPSJtb2IiPgoKCiAgICA8ZGl2IGNsYXNzPSJyb3ciPgogICAgICAgIDxkaXYgY2xhc3M9ImNvbC1zbS0xMiI+CiAgICAgICAgICAgIDx0YWJsZSB3aWR0aD0iMTAwJSIgYm9yZGVyPSIwIj4KICAgICAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgICAgICA8dGggd2lkdGg9IjElIiByb3dzcGFuPSIyIiBzY29wZT0icm93Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBhbGlnbj0ibGVmdCIgc3R5bGU9InBhZGRpbmctcmlnaHQ6MjBweDsgbWFyZ2luLXRvcDotMTZweDsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9IkAvYXNzZXRzL3Jlbm92YS9pY29uLXVzZXIucG5nIj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPC90aD4KICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgICAgPHRkPgogICAgICAgICAgICAgICAgICAgICAgICA8cD48c3BhbiBzdHlsZT0iZm9udC1zaXplOjE1cHg7IGZvbnQtd2VpZ2h0OmJvbGQ7IGNvbG9yOiM4MjgyODI7Ij5HcmF6aSBTYXRvIDxmb250IGNsYXNzPSJzdW1pciIgc3R5bGU9ImNvbG9yOiAjNzBkMzlhOyBmb250LXNpemU6IDExcHg7Ij4mbmJzcDsmbmJzcDsmbmJzcDsmbmJzcDsmbmJzcDsmbmJzcDsgQ29tcHJhZG9yIFZlcmlmaWNhZG88L2ZvbnQ+PC9zcGFuPjxiciBjbGFzcz0ibW9iIj48c3BhbiBzdHlsZT0iZmxvYXQ6cmlnaHQ7IGNvbG9yOiM5OTk7IGZvbnQtc2l6ZToxMnB4OyBmb250LXdlaWdodDpib2xkOyIgY2xhc3M9ImRhdGFDb21lbnQiPjAyLzAzLzIwMjA8L3NwYW4+PC9wPgogICAgICAgICAgICAgICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luLXRvcDogLTEwcHg7IGNvbG9yOiM4MjgyODI7IGZvbnQtc2l6ZTogMTBweDsiPjxpbWcgc3R5bGU9Im1hcmdpbi10b3A6MjBweDsiIHNyYz0iQC9hc3NldHMvcmVub3ZhL2ltZy1ici5wbmciPjwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgPHAgc3R5bGU9Im1hcmdpbi10b3A6IC0xMHB4OyBtYXJnaW4tYm90dG9tOiAyMHB4OyI+PGltZyBzdHlsZT0ibWFyZ2luLXRvcDoyMHB4OyIgc3JjPSJAL2Fzc2V0cy9yZW5vdmEvNS1zdGFycy5wbmciPjwvcD4KICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgPC90YWJsZT4KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtc20tMTIiPgogICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luLXRvcDotMTVweDsgY29sb3I6IzgyODI4MjsgZm9udC1zaXplOjE1cHg7Ij48c3Ryb25nIHN0eWxlPSJmb250LXdlaWdodDo3MDA7Ij5FdSB0b21vIGrDoSBmYXplbSA0IG1lc2VzPC9zdHJvbmc+PC9wPgogICAgICAgICAgICA8cCBzdHlsZT0iY29sb3I6IzgyODI4MjsgZm9udC1zaXplOjE0cHg7Ij5FdSBjb21wcmVpIGVzdG91IHRvbWFuZG8gasOhIGZheiA0IG3DqnMgZSBuw6NvIHRlbmhvIG1haXMgbmVuaHVtYSBsaW5oYSBkZSBleHByZXNzw6NvIG5vIHJvc3RvLCDDqSBtdWl0byBib20gY29uaGVjaSBlbGUgYXRyYXbDqXMgZGEgVGhhZW1lLjwvcD4KICAgICAgICA8L2Rpdj4KICAgIDwvZGl2PgoKCiAgICA8YnIgY2xhc3M9ImRlc2siPgogICAgPGJyIGNsYXNzPSJtb2IiPgoKICAgIDxkaXYgc3R5bGU9ImJvcmRlcjogMC4ycHggc29saWQgI2UyZTJlMjsgd2lkdGg6MTAwJTsgaGVpZ2h0OjFweDsgbWFyZ2luLWJvdHRvbTo2cHg7Ij48L2Rpdj4KCgogICAgPGJyIGNsYXNzPSJkZXNrIj4KICAgIDxiciBjbGFzcz0ibW9iIj4KCgogICAgPGRpdiBjbGFzcz0icm93Ij4KICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtc20tMTIiPgogICAgICAgICAgICA8dGFibGUgd2lkdGg9IjEwMCUiIGJvcmRlcj0iMCI+CiAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgICAgPHRoIHdpZHRoPSIxJSIgcm93c3Bhbj0iMiIgc2NvcGU9InJvdyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgYWxpZ249ImxlZnQiIHN0eWxlPSJwYWRkaW5nLXJpZ2h0OjIwcHg7IG1hcmdpbi10b3A6LTE2cHg7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPSJAL2Fzc2V0cy9yZW5vdmEvaWNvbi11c2VyLnBuZyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwvdGg+CiAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgICAgIDx0ZD4KICAgICAgICAgICAgICAgICAgICAgICAgPHA+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZToxNXB4OyBmb250LXdlaWdodDpib2xkOyBjb2xvcjojODI4MjgyOyI+Um9kbGV5IFNpbHZhIDxmb250IGNsYXNzPSJzdW1pciIgc3R5bGU9ImNvbG9yOiAjNzBkMzlhOyBmb250LXNpemU6IDExcHg7Ij4mbmJzcDsmbmJzcDsmbmJzcDsmbmJzcDsmbmJzcDsmbmJzcDsgQ29tcHJhZG9yIFZlcmlmaWNhZG88L2ZvbnQ+PC9zcGFuPjxiciBjbGFzcz0ibW9iIj48c3BhbiBzdHlsZT0iZmxvYXQ6cmlnaHQ7IGNvbG9yOiM5OTk7IGZvbnQtc2l6ZToxMnB4OyBmb250LXdlaWdodDpib2xkOyIgY2xhc3M9ImRhdGFDb21lbnQiPjE4LzAzLzIwMjA8L3NwYW4+PC9wPgogICAgICAgICAgICAgICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luLXRvcDogLTEwcHg7IGNvbG9yOiM4MjgyODI7IGZvbnQtc2l6ZTogMTBweDsiPjxpbWcgc3R5bGU9Im1hcmdpbi10b3A6MjBweDsiIHNyYz0iQC9hc3NldHMvcmVub3ZhL2ltZy1ici5wbmciPjwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgPHAgc3R5bGU9Im1hcmdpbi10b3A6IC0xMHB4OyBtYXJnaW4tYm90dG9tOiAyMHB4OyI+PGltZyBzdHlsZT0ibWFyZ2luLXRvcDoyMHB4OyIgc3JjPSJAL2Fzc2V0cy9yZW5vdmEvNS1zdGFycy5wbmciPjwvcD4KICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgPC90YWJsZT4KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtc20tMTIiPgogICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luLXRvcDotMTVweDsgY29sb3I6IzgyODI4MjsgZm9udC1zaXplOjE1cHg7Ij48c3Ryb25nIHN0eWxlPSJmb250LXdlaWdodDo3MDA7Ij5Ow6NvIMOpIHPDsyBwcm9wYWdhbmRhLCByZWFsbWVudGUgZnVuY2lvbmE8L3N0cm9uZz48L3A+CiAgICAgICAgICAgIDxwIHN0eWxlPSJjb2xvcjojODI4MjgyOyBmb250LXNpemU6MTRweDsiPkFjaGVpIHF1ZSBvIHByb2R1dG8gZnVuY2lvbmF2YSBzw7MgcHJhIG11bGhlciwgbWFzIHBlbG8gY29udHLDoXJpbyBwcmEgbWltIGRldSBTVVBFUiBDRVJUTy4gU2VtcHJlIGdvc3RlaSBkZSBjdWlkYXIgZGEgcGVsZSwgYWdvcmEgYWNoZWkgdW0gbm92byBhbGlhZG8uIAogICAgICAgICAgICBDaGVnb3UgZW0gMiBkaWFzLCBwZXJjZWJpIHF1ZSBhcyBsaW5oYXMgZGUgZXhwcmVzc8OjbyBqw6Egc3VtaXJhbSwgYWzDqW0gZGUgc2VyIGRlbGljaW9zbyBwcmEgcXVhbHF1ZXIgaG9yYS48L3A+CiAgICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KCgogICAgPGJyIGNsYXNzPSJkZXNrIj4KICAgIDxiciBjbGFzcz0ibW9iIj4KCiAgICA8ZGl2IHN0eWxlPSJib3JkZXI6IDAuMnB4IHNvbGlkICNlMmUyZTI7IHdpZHRoOjEwMCU7IGhlaWdodDoxcHg7IG1hcmdpbi1ib3R0b206NnB4OyI+PC9kaXY+CgoKICAgIDxiciBjbGFzcz0iZGVzayI+CiAgICA8YnIgY2xhc3M9Im1vYiI+CgoKICAgIDxkaXYgY2xhc3M9InJvdyI+CiAgICAgICAgPGRpdiBjbGFzcz0iY29sLXNtLTEyIj4KICAgICAgICAgICAgPHRhYmxlIHdpZHRoPSIxMDAlIiBib3JkZXI9IjAiPgogICAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgICAgIDx0aCB3aWR0aD0iMSUiIHJvd3NwYW49IjIiIHNjb3BlPSJyb3ciPgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGFsaWduPSJsZWZ0IiBzdHlsZT0icGFkZGluZy1yaWdodDoyMHB4OyBtYXJnaW4tdG9wOi0xNnB4OyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz0iQC9hc3NldHMvcmVub3ZhL2ljb24tdXNlci5wbmciPgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8L3RoPgogICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgICAgICA8dGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDxwPjxzcGFuIHN0eWxlPSJmb250LXNpemU6MTVweDsgZm9udC13ZWlnaHQ6Ym9sZDsgY29sb3I6IzgyODI4MjsiPlZhbmVzc2EgUC4gPGZvbnQgY2xhc3M9InN1bWlyIiBzdHlsZT0iY29sb3I6ICM3MGQzOWE7IGZvbnQtc2l6ZTogMTFweDsiPiZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOyBDb21wcmFkb3IgVmVyaWZpY2FkbzwvZm9udD48L3NwYW4+PGJyIGNsYXNzPSJtb2IiPjxzcGFuIHN0eWxlPSJmbG9hdDpyaWdodDsgY29sb3I6Izk5OTsgZm9udC1zaXplOjEycHg7IGZvbnQtd2VpZ2h0OmJvbGQ7IiBjbGFzcz0iZGF0YUNvbWVudCI+MjAvMDQvMjAyMDwvc3Bhbj48L3A+CiAgICAgICAgICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW4tdG9wOiAtMTBweDsgY29sb3I6IzgyODI4MjsgZm9udC1zaXplOiAxMHB4OyI+PGltZyBzdHlsZT0ibWFyZ2luLXRvcDoyMHB4OyIgc3JjPSJAL2Fzc2V0cy9yZW5vdmEvaW1nLWJyLnBuZyI+PC9wPgogICAgICAgICAgICAgICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luLXRvcDogLTEwcHg7IG1hcmdpbi1ib3R0b206IDIwcHg7Ij48aW1nIHN0eWxlPSJtYXJnaW4tdG9wOjIwcHg7IiBzcmM9IkAvYXNzZXRzL3Jlbm92YS81LXN0YXJzLnBuZyI+PC9wPgogICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICA8L3RhYmxlPgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9ImNvbC1zbS0xMiI+CiAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW4tdG9wOi0xNXB4OyBjb2xvcjojODI4MjgyOyBmb250LXNpemU6MTVweDsiPjxzdHJvbmcgc3R5bGU9ImZvbnQtd2VpZ2h0OjcwMDsiPk11aXRvIG1lbGhvciBxdWUgY29tcHJpbWlkbzwvc3Ryb25nPjwvcD4KICAgICAgICAgICAgPHAgc3R5bGU9ImNvbG9yOiM4MjgyODI7IGZvbnQtc2l6ZToxNHB4OyI+SmEgdXNlaSBzYW5hdml0YSwgdml2YSBiZWF1dGksIG1hcyBuw6NvIHNlbnRpIHRhbnRhIGRpZmVyZW7Dp2EgbmEgcGVsZS4gQ29tcHJlaSBvIFJlbm92YSBmYXplbSB1bWFzIDMgc2VtYW5hcyBlIG5vdGVpIE1VSVRBIGRpZmVyZW7Dp2EgbmEgZmlybWV6YSBkYSBwZWxlLiAKICAgICAgICAgICAgICAgIHByZcOnbyBhY2Vzc8OtdmVsLCBhdGVuZGltZW50byBvdGltbyBlIGVudHJlZ2EgcmFwaWRhIHRibS4gQ29tcHJlaSBtYWlzIHBvdGVzLiBCanMuCiAgICAgICAgICAgIEFkb3JlaSA6KTwvcD4KICAgICAgICA8L2Rpdj4KICAgIDwvZGl2PgoKICAgIDxiciBjbGFzcz0iZGVzayI+CiAgICA8YnIgY2xhc3M9Im1vYiI+CgogICAgPGRpdiBzdHlsZT0iYm9yZGVyOiAwLjJweCBzb2xpZCAjZTJlMmUyOyB3aWR0aDoxMDAlOyBoZWlnaHQ6MXB4OyBtYXJnaW4tYm90dG9tOjZweDsiPjwvZGl2PgoKCiAgICA8YnIgY2xhc3M9ImRlc2siPgogICAgPGJyIGNsYXNzPSJtb2IiPgoKICAgIDxkaXYgY2xhc3M9InJvdyI+CiAgICAgICAgPGRpdiBjbGFzcz0iY29sLXNtLTEyIj4KICAgICAgICAgICAgPHRhYmxlIHdpZHRoPSIxMDAlIiBib3JkZXI9IjAiPgogICAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgICAgIDx0aCB3aWR0aD0iMSUiIHJvd3NwYW49IjIiIHNjb3BlPSJyb3ciPgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGFsaWduPSJsZWZ0IiBzdHlsZT0icGFkZGluZy1yaWdodDoyMHB4OyBtYXJnaW4tdG9wOi0xNnB4OyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz0iQC9hc3NldHMvcmVub3ZhL2ljb24tdXNlci5wbmciPgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8L3RoPgogICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgICAgICA8dGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDxwPjxzcGFuIHN0eWxlPSJmb250LXNpemU6MTVweDsgZm9udC13ZWlnaHQ6Ym9sZDsgY29sb3I6IzgyODI4MjsiPlJhcGhhZWxhIEcuIDxmb250IGNsYXNzPSJzdW1pciIgc3R5bGU9ImNvbG9yOiAjNzBkMzlhOyBmb250LXNpemU6IDExcHg7Ij4mbmJzcDsmbmJzcDsmbmJzcDsmbmJzcDsmbmJzcDsmbmJzcDsgQ29tcHJhZG9yIFZlcmlmaWNhZG88L2ZvbnQ+PC9zcGFuPjxiciBjbGFzcz0ibW9iIj48c3BhbiBzdHlsZT0iZmxvYXQ6cmlnaHQ7IGNvbG9yOiM5OTk7IGZvbnQtc2l6ZToxMnB4OyBmb250LXdlaWdodDpib2xkOyIgY2xhc3M9ImRhdGFDb21lbnQiPjIwLzA0LzIwMjA8L3NwYW4+PC9wPgogICAgICAgICAgICAgICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luLXRvcDogLTEwcHg7IGNvbG9yOiM4MjgyODI7IGZvbnQtc2l6ZTogMTBweDsiPjxpbWcgc3R5bGU9Im1hcmdpbi10b3A6MjBweDsiIHNyYz0iQC9hc3NldHMvcmVub3ZhL2ltZy1ici5wbmciPjwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgPHAgc3R5bGU9Im1hcmdpbi10b3A6IC0xMHB4OyBtYXJnaW4tYm90dG9tOiAyMHB4OyI+PGltZyBzdHlsZT0ibWFyZ2luLXRvcDoyMHB4OyIgc3JjPSJAL2Fzc2V0cy9yZW5vdmEvNS1zdGFycy5wbmciPjwvcD4KICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgPC90YWJsZT4KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtc20tMTIiPgogICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luLXRvcDotMTVweDsgY29sb3I6IzgyODI4MjsgZm9udC1zaXplOjE1cHg7Ij48c3Ryb25nIHN0eWxlPSJmb250LXdlaWdodDo3MDA7Ij5QZWxlIGZpcm1lIGUgc2VtIGZsYWNpZGV6PC9zdHJvbmc+PC9wPgogICAgICAgICAgICA8cCBzdHlsZT0iY29sb3I6IzgyODI4MjsgZm9udC1zaXplOjE0cHg7Ij5TZW1wcmUgdGl2ZSBwcm9ibGVtYXMgY29tIGNlbHVsaXRlIGUgY29tIGFzIG1hcmNhcyBkZSBmcmFuemltZW50byBkYSBtaW5oYSB0ZXN0YSwgbG9nbyBhcMOzcyAyIG1lc2VzIGRlIHVzbyBkbyBwcm9kdXRvIHZpbSBhcXVpIGRhciB1bSByZWxhdG8gZGUgcXVlCiAgICAgICAgICAgICAgICB0ZW0gc2lkbyB1bSB0cmF0YW1lbnRvIEVYQ0VQQ0lPTkFMLiBFc3RvdSBhbWFuZG8gb3MgcmVzdWx0YWRvcyBlIHZvY2VzIGdhbmhhcmFtIHVtYSBjbGllbnRlIGZpZWwuIE9iZy4KICAgICAgICAgICAgQWRvcmVpIDopPC9wPgogICAgICAgIDwvZGl2PgogICAgPC9kaXY+CgogICAgPGJyIGNsYXNzPSJkZXNrIj4KICAgIDxiciBjbGFzcz0ibW9iIj4KCiAgICA8ZGl2IHN0eWxlPSJib3JkZXI6IDAuMnB4IHNvbGlkICNlMmUyZTI7IHdpZHRoOjEwMCU7IGhlaWdodDoxcHg7IG1hcmdpbi1ib3R0b206NnB4OyI+PC9kaXY+CgoKICAgIDxiciBjbGFzcz0iZGVzayI+CiAgICA8YnIgY2xhc3M9Im1vYiI+CgogICAgPGRpdiBjbGFzcz0icm93Ij4KICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtc20tMTIiPgogICAgICAgICAgICA8dGFibGUgd2lkdGg9IjEwMCUiIGJvcmRlcj0iMCI+CiAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgICAgPHRoIHdpZHRoPSIxJSIgcm93c3Bhbj0iMiIgc2NvcGU9InJvdyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgYWxpZ249ImxlZnQiIHN0eWxlPSJwYWRkaW5nLXJpZ2h0OjIwcHg7IG1hcmdpbi10b3A6LTE2cHg7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPSJAL2Fzc2V0cy9yZW5vdmEvaWNvbi11c2VyLnBuZyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwvdGg+CiAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgICAgIDx0ZD4KICAgICAgICAgICAgICAgICAgICAgICAgPHA+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZToxNXB4OyBmb250LXdlaWdodDpib2xkOyBjb2xvcjojODI4MjgyOyI+Q2Fyb2wgRnJlaXRhczxmb250IGNsYXNzPSJzdW1pciIgc3R5bGU9ImNvbG9yOiAjNzBkMzlhOyBmb250LXNpemU6IDExcHg7Ij4mbmJzcDsmbmJzcDsmbmJzcDsmbmJzcDsmbmJzcDsmbmJzcDsgQ29tcHJhZG9yIFZlcmlmaWNhZG88L2ZvbnQ+PC9zcGFuPjxiciBjbGFzcz0ibW9iIj48c3BhbiBzdHlsZT0iZmxvYXQ6cmlnaHQ7IGNvbG9yOiM5OTk7IGZvbnQtc2l6ZToxMnB4OyBmb250LXdlaWdodDpib2xkOyIgY2xhc3M9ImRhdGFDb21lbnQiPjIwLzA0LzIwMjA8L3NwYW4+PC9wPgogICAgICAgICAgICAgICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luLXRvcDogLTEwcHg7IGNvbG9yOiM4MjgyODI7IGZvbnQtc2l6ZTogMTBweDsiPjxpbWcgc3R5bGU9Im1hcmdpbi10b3A6MjBweDsiIHNyYz0iQC9hc3NldHMvcmVub3ZhL2ltZy1ici5wbmciPjwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgPHAgc3R5bGU9Im1hcmdpbi10b3A6IC0xMHB4OyBtYXJnaW4tYm90dG9tOiAyMHB4OyI+PGltZyBzdHlsZT0ibWFyZ2luLXRvcDoyMHB4OyIgc3JjPSJAL2Fzc2V0cy9yZW5vdmEvNC1zdGFycy5wbmciPjwvcD4KICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgPC90YWJsZT4KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtc20tMTIiPgogICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luLXRvcDotMTVweDsgY29sb3I6IzgyODI4MjsgZm9udC1zaXplOjE1cHg7Ij48c3Ryb25nIHN0eWxlPSJmb250LXdlaWdodDo3MDA7Ij5QcmltZWlyYSBjb21wcmE8L3N0cm9uZz48L3A+CiAgICAgICAgICAgIDxwIHN0eWxlPSJjb2xvcjojODI4MjgyOyBmb250LXNpemU6MTRweDsiPkNvbXByZWkgZGVwb2lzIHF1ZSB2aSBhIEJpYWggZmFsYW5kbyBub3Mgc3RvcmllcywgbWFzIGFpbmRhIG7Do28gcmVjZWJpLiBBY2hlaSBvIHByZcOnbyBtdWl0byBib20sIGZhY2lsIGRlIGNvbXByYXIgZSBvIHByb2R1dG8gcHJvbWV0ZSBtdWl0YSBjb2lzYS4gQXNzaW0gcXVlIGNoZWdhciB2b2x0byBwcmEgZGFyIG1ldSBGZWVkYmFjay4gQmVpam9zIHBlc3NvYWwuPC9wPgogICAgICAgIDwvZGl2PgogICAgPC9kaXY+CgogICAgPGJyIGNsYXNzPSJkZXNrIj4KICAgIDxiciBjbGFzcz0ibW9iIj4KCiAgICA8ZGl2IHN0eWxlPSJib3JkZXI6IDAuMnB4IHNvbGlkICNlMmUyZTI7IHdpZHRoOjEwMCU7IGhlaWdodDoxcHg7IG1hcmdpbi1ib3R0b206NnB4OyI+PC9kaXY+CgoKICAgIDxiciBjbGFzcz0iZGVzayI+CiAgICA8YnIgY2xhc3M9Im1vYiI+CgogICAgPGRpdiBjbGFzcz0icm93Ij4KICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtc20tMTIiPgogICAgICAgICAgICA8dGFibGUgd2lkdGg9IjEwMCUiIGJvcmRlcj0iMCI+CiAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgICAgPHRoIHdpZHRoPSIxJSIgcm93c3Bhbj0iMiIgc2NvcGU9InJvdyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgYWxpZ249ImxlZnQiIHN0eWxlPSJwYWRkaW5nLXJpZ2h0OjIwcHg7IG1hcmdpbi10b3A6LTE2cHg7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPSJAL2Fzc2V0cy9yZW5vdmEvaWNvbi11c2VyLnBuZyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwvdGg+CiAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgICAgIDx0ZD4KICAgICAgICAgICAgICAgICAgICAgICAgPHA+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZToxNXB4OyBmb250LXdlaWdodDpib2xkOyBjb2xvcjojODI4MjgyOyI+R2FicmllbGEgRGlhcyA8Zm9udCBjbGFzcz0ic3VtaXIiIHN0eWxlPSJjb2xvcjogIzcwZDM5YTsgZm9udC1zaXplOiAxMXB4OyI+Jm5ic3A7Jm5ic3A7Jm5ic3A7Jm5ic3A7Jm5ic3A7Jm5ic3A7IENvbXByYWRvciBWZXJpZmljYWRvPC9mb250Pjwvc3Bhbj48YnIgY2xhc3M9Im1vYiI+PHNwYW4gc3R5bGU9ImZsb2F0OnJpZ2h0OyBjb2xvcjojOTk5OyBmb250LXNpemU6MTJweDsgZm9udC13ZWlnaHQ6Ym9sZDsiIGNsYXNzPSJkYXRhQ29tZW50Ij4yMC8wNC8yMDIwPC9zcGFuPjwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgPHAgc3R5bGU9Im1hcmdpbi10b3A6IC0xMHB4OyBjb2xvcjojODI4MjgyOyBmb250LXNpemU6IDEwcHg7Ij48aW1nIHN0eWxlPSJtYXJnaW4tdG9wOjIwcHg7IiBzcmM9IkAvYXNzZXRzL3Jlbm92YS9pbWctYnIucG5nIj48L3A+CiAgICAgICAgICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJtYXJnaW4tdG9wOiAtMTBweDsgbWFyZ2luLWJvdHRvbTogMjBweDsiPjxpbWcgc3R5bGU9Im1hcmdpbi10b3A6MjBweDsiIHNyYz0iQC9hc3NldHMvcmVub3ZhLzUtc3RhcnMucG5nIj48L3A+CiAgICAgICAgICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgIDwvdGFibGU+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0iY29sLXNtLTEyIj4KICAgICAgICAgICAgPHAgc3R5bGU9Im1hcmdpbi10b3A6LTE1cHg7IGNvbG9yOiM4MjgyODI7IGZvbnQtc2l6ZToxNXB4OyI+PHN0cm9uZyBzdHlsZT0iZm9udC13ZWlnaHQ6NzAwOyI+RXhjZWxlbnRlIHByb2R1dG88L3N0cm9uZz48L3A+CiAgICAgICAgICAgIDxwIHN0eWxlPSJjb2xvcjojODI4MjgyOyBmb250LXNpemU6MTRweDsiPkJvbSBkaWEgZXNzZSBwcm9kdXRvIHJlYWxtZW50ZSBjdW1wcmUgbyBxdWUgcHJvbWV0ZSBjb21wcmVpIHBvciBpbmRpY2HDp8OjbyBkYSBtaW5oYSBkZXJtYXRvIHV0aWxpem8gaMOhIHF1YXNlIHRyw6pzIG1lc2VzIGUgZXN0b3UgbXVpdG8gc2F0aXNmZWl0YS4gCiAgICAgICAgICAgIGFwcm92YWRpc3NpbW8hISE8L3A+CiAgICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KCiAgICA8cCBzdHlsZT0ibWFyZ2luLXRvcDozMHB4OyBmb250LXNpemU6MTFweDsgY29sb3I6Izk5OTsiPipJbmZvcm1hbW9zIHF1ZSBSZW5vdmFiZSDDqSB1bSB0cmF0YW1lbnRvLiBTZXUgcmVzdWx0YWRvIHBvZGUgdmFyaWFyIGRlIHBlc3NvYSBwYXJhIHBlc3NvYS48L3A+Cgo8L2Rpdj4KPC9zZWN0aW9uPgo="},null]}