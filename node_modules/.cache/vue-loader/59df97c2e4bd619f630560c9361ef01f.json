{"remainingRequest":"C:\\Users\\rjj20\\Desktop\\renovabe\\renovabe-vue\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\rjj20\\Desktop\\renovabe\\renovabe-vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\rjj20\\Desktop\\renovabe\\renovabe-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\rjj20\\Desktop\\renovabe\\renovabe-vue\\src\\components\\gerais\\tabelaNutricional.vue?vue&type=template&id=e11671f2&","dependencies":[{"path":"C:\\Users\\rjj20\\Desktop\\renovabe\\renovabe-vue\\src\\components\\gerais\\tabelaNutricional.vue","mtime":1626799648581},{"path":"C:\\Users\\rjj20\\Desktop\\renovabe\\renovabe-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1625689018811},{"path":"C:\\Users\\rjj20\\Desktop\\renovabe\\renovabe-vue\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1625689037702},{"path":"C:\\Users\\rjj20\\Desktop\\renovabe\\renovabe-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1625689018811},{"path":"C:\\Users\\rjj20\\Desktop\\renovabe\\renovabe-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1625689037694}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF92bS5fbSgwKQp9CnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbCiAgZnVuY3Rpb24oKSB7CiAgICB2YXIgX3ZtID0gdGhpcwogICAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2gKICAgIHJldHVybiBfYygic2VjdGlvbiIsIHsgc3RhdGljQ2xhc3M6ICJ0YWJlbGFOdXRyaWNpb25hbCIgfSwgWwogICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImNvbnRhaW5lciIgfSwgWwogICAgICAgIF9jKAogICAgICAgICAgImRpdiIsCiAgICAgICAgICB7CiAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAicm93IGRpeiBzZW1QYWRkaW5nIiwKICAgICAgICAgICAgc3RhdGljU3R5bGU6IHsgInRleHQtYWxpZ24iOiAiY2VudGVyIiwgcGFkZGluZzogIjBweCAwcHggMHB4IDE1cHgiIH0KICAgICAgICAgIH0sCiAgICAgICAgICBbCiAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiY29sLTEyIGNvbC1zbS00IGJ0bjEiIH0sIFsKICAgICAgICAgICAgICBfYygic3BhbiIsIHsKICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAic2V0YURlc2MgZ2x5cGhpY29uIGdseXBoaWNvbi1jaGV2cm9uLXJpZ2h0IiwKICAgICAgICAgICAgICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICAgICAgICAgICAgIGNvbG9yOiAiI2ZmZiIsCiAgICAgICAgICAgICAgICAgICJtYXJnaW4tdG9wIjogIjBweCIsCiAgICAgICAgICAgICAgICAgICJmb250LXNpemUiOiAiMTFweCIKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICBfdm0uX3YoIiAiKSwKICAgICAgICAgICAgICBfYygiYiIsIFtfdm0uX3YoIkRFU0NSScOHw4NPIildKQogICAgICAgICAgICBdKSwKICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJjb2wtMTIgY29sLXNtLTQgYnRuMiIgfSwgWwogICAgICAgICAgICAgIF9jKCJzcGFuIiwgewogICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJzZXRhRGVzYyBnbHlwaGljb24gZ2x5cGhpY29uLWNoZXZyb24tcmlnaHQiLAogICAgICAgICAgICAgICAgc3RhdGljU3R5bGU6IHsKICAgICAgICAgICAgICAgICAgY29sb3I6ICIjZmZmIiwKICAgICAgICAgICAgICAgICAgIm1hcmdpbi10b3AiOiAiMHB4IiwKICAgICAgICAgICAgICAgICAgImZvbnQtc2l6ZSI6ICIxMXB4IgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgIF92bS5fdigiICIpLAogICAgICAgICAgICAgIF9jKCJiIiwgW192bS5fdigiRk9STUFTIERFIEVOVFJFR0EiKV0pCiAgICAgICAgICAgIF0pLAogICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImNvbC0xMiBjb2wtc20tNCBidG4zIiB9LCBbCiAgICAgICAgICAgICAgX2MoInNwYW4iLCB7CiAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogInNldGFEZXNjIGdseXBoaWNvbiBnbHlwaGljb24tY2hldnJvbi1yaWdodCIsCiAgICAgICAgICAgICAgICBzdGF0aWNTdHlsZTogewogICAgICAgICAgICAgICAgICBjb2xvcjogIiNmZmYiLAogICAgICAgICAgICAgICAgICAibWFyZ2luLXRvcCI6ICIwcHgiLAogICAgICAgICAgICAgICAgICAiZm9udC1zaXplIjogIjExcHgiCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgICAgX3ZtLl92KCIgIiksCiAgICAgICAgICAgICAgX2MoImIiLCBbX3ZtLl92KCJJTkZPUk1Bw4fDlUVTIE5VVFJJQ0lPTkFJUyIpXSkKICAgICAgICAgICAgXSkKICAgICAgICAgIF0KICAgICAgICApCiAgICAgIF0pLAogICAgICBfYygic2VjdGlvbiIsIHsgc3RhdGljQ2xhc3M6ICJzZWMxIiB9LCBbCiAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJjb250YWluZXIiIH0sIFsKICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAicm93IiB9LCBbCiAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiY29sLXNtLTEyIHRpcmFyUGFkZGluZyIsCiAgICAgICAgICAgICAgICBzdGF0aWNTdHlsZTogewogICAgICAgICAgICAgICAgICBwYWRkaW5nOiAiMHB4IDMwcHggMHB4IDMwcHgiLAogICAgICAgICAgICAgICAgICAidGV4dC1hbGlnbiI6ICJqdXN0aWZ5IgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAgICAgICAiIMOAIG1lZGlkYSBxdWUgZW52ZWxoZWNlbW9zLCBvIGNvcnBvIHBhc3NhIGEgcHJvZHV6aXIgbWVub3MgY29sw6FnZW5vLiBBcyBjb25zZXF1w6puY2lhcyBkaXNzbywgYmVtIGNvbW8gYSBmYWx0YSBkYXMgdml0YW1pbmFzIEEsIEMgZSBFLCBmaWNhbSBldmlkZW5jaWFkYXMgbmEgcGVsZSwgY2FiZWxvcyBlIHVuaGFzLiBDb21wb3N0byBwb3IgbnV0cmllbnRlcyBkZSB0ZWNub2xvZ2lhIGF2YW7Dp2FkYSwgbyBSZW5vdmEgQmUgdHJheiBkZSB2b2x0YSBhIGp1dmVudHVkZSBlIGJlbGV6YSBkYSBzdWEgcGVsZSwgY29tIHJlc3VsdGFkb3MgasOhIG5vIHByaW1laXJvIG3DqnMgZGUgdXNvOiAiCiAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgICAgX2MoImJyIiksCiAgICAgICAgICAgICAgICBfYygiYnIiKSwKICAgICAgICAgICAgICAgIF92bS5fdigiIOKAkyBBdW1lbnRvIGRhIGVsYXN0aWNpZGFkZSBlIGZpcm1lemEgZGEgcGVsZTsiKSwKICAgICAgICAgICAgICAgIF9jKCJiciIpLAogICAgICAgICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAgICAgICAiIOKAkyBSZWR1w6fDo28gc2lnbmlmaWNhdGl2YSBkYXMgcnVnYXMgZSBsaW5oYXMgZGUgZXhwcmVzc8OjbzsiCiAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgICAgX2MoImJyIiksCiAgICAgICAgICAgICAgICBfdm0uX3YoIiDigJMgQ2FiZWxvcyBlIHVuaGFzIG1haXMgZm9ydGVzIGUgc2F1ZMOhdmVpczsiKSwKICAgICAgICAgICAgICAgIF9jKCJiciIpLAogICAgICAgICAgICAgICAgX3ZtLl92KCIg4oCTIFJlZHXDp8OjbyBkYXMgZXN0cmlhcyBlIGNlbHVsaXRlcy4gIikKICAgICAgICAgICAgICBdCiAgICAgICAgICAgICkKICAgICAgICAgIF0pCiAgICAgICAgXSkKICAgICAgXSksCiAgICAgIF9jKCJzZWN0aW9uIiwgeyBzdGF0aWNDbGFzczogInNlYzIiIH0sIFsKICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImNvbnRhaW5lciIgfSwgWwogICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJyb3ciIH0sIFsKICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgImRpdiIsCiAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJjb2wtc20tMTIgdGlyYXJQYWRkaW5nIiwKICAgICAgICAgICAgICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICAgICAgICAgICAgIHBhZGRpbmc6ICIwcHggMzBweCAwcHggMzBweCIsCiAgICAgICAgICAgICAgICAgICJ0ZXh0LWFsaWduIjogImp1c3RpZnkiCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICAgICAgICIgT3MgcGVkaWRvcyBzw6NvIGRlc3BhY2hhZG9zIG5vIHByYXpvIGRlIDI0aCDDunRlaXMgYXDDs3MgYSBjb25maXJtYcOnw6NvIGRvIHBhZ2FtZW50byBlIGFwcm92YcOnw6NvIGRhIGNvbXByYS4iCiAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgICAgX2MoImJyIiksCiAgICAgICAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICAgICAgICIgT3MgZW52aW9zIHPDo28gZmVpdG9zIGF0cmF2w6lzIGRvIENvcnJlaW9zLCBlbXByZXNhIHBhcmNlaXJhIFJFTk9WQSBCRS4iCiAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgICAgX2MoImJyIiksCiAgICAgICAgICAgICAgICBfYygiYnIiKSwKICAgICAgICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgICAgICAgIiBPIHByYXpvIMOpIGNhbGN1bGFkbyBubyBtb21lbnRvIGRhIGNvbXByYSBlIMOpIGNvbnRhZG8gYXDDs3MgYSBwb3N0YWdlbSBkbyBwZWRpZG8sIHF1ZSB2YXJpYSBkZSBhY29yZG8gY29tIG8gbG9jYWwgZGUgZW50cmVnYS4iCiAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgICAgX2MoImJyIiksCiAgICAgICAgICAgICAgICBfdm0uX3YoIiBPIHByYXpvIG3DqWRpbyBkZSBlbnRyZWdhIMOpIGRlIDAzIGEgMDUgZGlhcyDDunRlaXMuICIpCiAgICAgICAgICAgICAgXQogICAgICAgICAgICApCiAgICAgICAgICBdKQogICAgICAgIF0pCiAgICAgIF0pLAogICAgICBfYygic2VjdGlvbiIsIHsgc3RhdGljQ2xhc3M6ICJzZWMzIiB9LCBbCiAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJjb250YWluZXIiIH0sIFsKICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAicm93IiB9LCBbCiAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiY29sLXNtLTEyIHRpcmFyUGFkZGluZyIsCiAgICAgICAgICAgICAgICBzdGF0aWNTdHlsZTogewogICAgICAgICAgICAgICAgICBwYWRkaW5nOiAiMHB4IDMwcHggMHB4IDMwcHgiLAogICAgICAgICAgICAgICAgICAidGV4dC1hbGlnbiI6ICJqdXN0aWZ5IgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgX2MoImltZyIsIHsKICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJpbWdSZXNwb25zaXZlIiwKICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgc3JjOiByZXF1aXJlKCJAL2Fzc2V0cy9yZW5vdmEvVEFCRUxBMi5qcGciKSB9CiAgICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICAgIF9jKCJiciIpLAogICAgICAgICAgICAgICAgX2MoImJyIikKICAgICAgICAgICAgICBdCiAgICAgICAgICAgICkKICAgICAgICAgIF0pCiAgICAgICAgXSkKICAgICAgXSkKICAgIF0pCiAgfQpdCnJlbmRlci5fd2l0aFN0cmlwcGVkID0gdHJ1ZQoKZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfQ=="}]}